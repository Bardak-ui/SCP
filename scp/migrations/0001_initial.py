# Generated by Django 5.1.4 on 2025-01-19 11:11

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('anons', models.CharField(max_length=250, verbose_name='Краткое описание поста')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('creator', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='statia_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=3000)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='message_user', to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_post', to='scp.post')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='./profile_avatars/')),
                ('role', models.CharField(blank=True, choices=[('Администратор', 'Administrator'), ('Исполнитель', 'Executor')], default='Исполнитель', max_length=50)),
                ('account', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('Заблокирован', 'Заблокирован'), ('Не заблокирован', 'Не заблокирован')], default='Не заблокирован', max_length=50)),
                ('puser', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название проекта')),
                ('description', models.TextField(verbose_name='Описание проекта')),
                ('code', models.TextField(blank=True, null=True)),
                ('language', models.CharField(choices=[('C', 'С'), ('C++', 'С++'), ('C#', 'С#'), ('Go', 'Go'), ('Java', 'Java'), ('JavaScript', 'JavaScript'), ('Kotlin', 'Kotlin'), ('PHP', 'PHP'), ('Python', 'Python'), ('Ruby', 'Ruby'), ('Rust', 'Rust'), ('TypeScript', 'TypeScript'), ('Swift', 'Swift'), ('Shell', 'Shell'), ('Perl', 'Perl'), ('Lua', 'Lua'), ('SQL', 'SQL'), ('Assembly', 'Ассемблер'), ('Не указан', 'Не указан')], default='Не указан', max_length=50, verbose_name='Язык программирования')),
                ('status', models.CharField(choices=[('Выполнено', 'Выполнено'), ('В разработке', 'В разработке'), ('Ожидает', 'Ожидает')], default='Ожидает', max_length=50, verbose_name='Статус')),
                ('created_at', models.DateField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='p_owner', to=settings.AUTH_USER_MODEL)),
                ('participants', models.ManyToManyField(blank=True, related_name='p_participants', to=settings.AUTH_USER_MODEL)),
                ('complexity', models.OneToOneField(choices=[('Выполнено', 'Выполнено'), ('В разработке', 'В разработке'), ('Ожидает', 'Ожидает')], default='Не указан', on_delete=django.db.models.deletion.CASCADE, related_name='p_complexity', to='scp.status', verbose_name='Сложность')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название задачи')),
                ('description', models.TextField(verbose_name='Описание задачи')),
                ('priority', models.CharField(choices=[('Низкий', 'Низкий'), ('Cредний', 'Cредний'), ('Высокий', 'Высокий'), ('Не указан', 'Не указан')], default='Не указан', max_length=50, verbose_name='Статус')),
                ('status', models.CharField(choices=[('Выполнено', 'Выполнено'), ('В разработке', 'В разработке'), ('Ожидает', 'Ожидает')], default='Ожидает', max_length=50, verbose_name='Cтатус')),
                ('created_at', models.DateField(auto_now_add=True)),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='t_assignee', to=settings.AUTH_USER_MODEL)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='t_creator', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='t_project', to='scp.project')),
            ],
        ),
    ]
